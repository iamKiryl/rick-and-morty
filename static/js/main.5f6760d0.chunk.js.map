{"version":3,"sources":["components/header/headerElements.js","components/header/index.js","components/header/header.js","components/itemList/itemListElements.js","components/spinner/spinner.js","components/spinner/index.js","components/itemList/index.js","components/itemList/itemList.js","services/gotService.js","components/app/background.png","components/app/appElements.js","globalStyle.js","components/container/container.js","components/container/index.js","components/itemsDetails/itemDetailsElements.js","components/itemsDetails/characterDetails.js","components/itemsDetails/locationDetails.js","components/itemsDetails/episodeDetails.js","components/app/index.js","components/app/app.js","index.js"],"names":["Head","styled","header","navlist","Ul","ul","IconDiv","div","IconPuzzle","BsFillPuzzleFill","LogoHead","Logo","Link","HeaderLink","Header","useState","navList","setNavList","closeNavList","onClick","to","ListLink","Li","li","load","keyframes","round","Spin","Spinner","ItemList","getData","getPath","itemsList","setItemsList","loading","setLoadind","useEffect","a","id","window","location","href","split","results","items","map","item","name","GotService","getResource","url","fetch","_apiBase","res","ok","Error","status","json","getAllCharacters","getAllEpisodes","getAllLocations","getCharacter","character","_transformCharacter","getEpisode","episode","_transformEpisode","getLocation","_transformLocatoin","_transformDate","date","isSet","data","isLink","link","length","position","_extractId","match","char","gender","origin","originLink","img","image","created","dimension","this","AppBlock","Container","GlobalStyle","createGlobalStyle","ContainerDiv","props","children","DetailsDiv","CharImageContainer","CharImage","CharInfo","DetailsLink","ArrowLink","Arrow","BsFillShiftFill","StatusDiv","statusDote","Title","h3","CharacterDetails","hrefArr","setCharacter","setLink","arr","undefined","then","src","LocationDetails","history","useHistory","setLocation","goBack","his","EpisodeDetails","App","gotService","exact","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.5f6760d0.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { BsFillPuzzleFill } from \"react-icons/bs\";\r\n\r\nexport const Head = styled.header`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    background-color: rgba(255, 255, 255, 0.8);\r\n    margin-bottom: 20px;\r\n    padding: 5px 20px;\r\n    border-radius: 0 0 10px 10px;\r\n    transition: .3s ease-in;\r\n    @media screen and (max-width: 680px){\r\n        padding-bottom: ${({navlist}) => (navlist ? '12rem' : '0rem')};\r\n    }\r\n`;\r\nexport const Ul = styled.ul`\r\n    list-style: none;\r\n    display: flex;\r\n    max-width: 400px;\r\n    width: 100%;\r\n    justify-content: space-between;\r\n    a{\r\n        font-size: 26px;\r\n    }\r\n    li{\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n    li+li{\r\n        margin-left: 10px;\r\n    }\r\n    @media screen and (max-width: 680px){\r\n        max-width: 100%;\r\n        position: absolute;\r\n        display: flex;\r\n        flex-direction: column;\r\n        top: ${({navlist}) => (navlist ? '0rem' : '-15rem')};\r\n        padding-top: 4rem;\r\n        right: 50%;\r\n        transform: translateX(50%);\r\n        transition: .3s ease-in;\r\n        height: 13rem;\r\n        li+li{\r\n            margin-left: 0;     \r\n        }\r\n    }  \r\n`;\r\n\r\nexport const IconDiv = styled.div`\r\n    display: none;\r\n    @media screen and (max-width: 680px){\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n    } \r\n`;\r\n\r\nexport const IconPuzzle = styled(BsFillPuzzleFill)`\r\n    color: ${({navlist}) => (navlist ? '#FFFF00' : 'darkgreen')};\r\n    width: 3rem;\r\n    height: 2rem;\r\n    transition: .3s ease-in;\r\n    cursor: pointer;\r\n    z-index: 1000;\r\n    transform: ${({navlist}) => (navlist ? 'rotate(90deg)' : 'rotate(0deg)')};\r\n    &:hover{\r\n        transition: .3s ease-in;\r\n        color: #FFFF00;\r\n    }\r\n`;\r\n\r\nexport const LogoHead = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nexport const Logo = styled(Link)`\r\n    color: darkgreen;\r\n    text-decoration: none;\r\n    font-weight: bold;\r\n    font-size: 1.8rem;\r\n    z-index: 1000;\r\n\r\n`;\r\n\r\nexport const HeaderLink = styled(Link)`\r\n    color: darkgreen;\r\n    text-decoration: none;\r\n`;","import Header from './header';\r\nexport default Header;","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { Head, Ul, IconDiv, IconPuzzle, LogoHead, Logo, HeaderLink } from './headerElements';\r\n\r\nconst Header = () => {\r\n\r\n    const [ navList, setNavList ] = useState(false);\r\n\r\n    const toggleNavList = () => {\r\n        setNavList(!navList);\r\n    }\r\n\r\n    const closeNavList = () => {\r\n        setNavList(false);\r\n    }\r\n\r\n    return(\r\n        <Head navlist={navList ? 1 : 0} >\r\n            <LogoHead>\r\n                <Logo onClick={closeNavList} to='/rick-and-morty/'>Rick and Morty</Logo>\r\n            </LogoHead>\r\n            <Ul navlist={navList ? 1 : 0}>\r\n               <li>\r\n                    <HeaderLink onClick={closeNavList} to='/rick-and-morty/characters/'>Characters</HeaderLink>   \r\n                </li>\r\n                <li>\r\n                    <HeaderLink onClick={closeNavList} to='/rick-and-morty/location/'>Locations</HeaderLink>   \r\n                </li> \r\n                <li>\r\n                    <HeaderLink onClick={closeNavList} to='/rick-and-morty/episode/'>Episodes</HeaderLink>   \r\n                </li> \r\n            </Ul>\r\n            <IconDiv>\r\n                <IconPuzzle navlist={navList ? 1 : 0} onClick={toggleNavList} />\r\n            </IconDiv>\r\n        </Head>\r\n    );\r\n}\r\n\r\nexport default Header;","import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Ul = styled.ul`\r\ncolor: #2F4F4F;\r\nlist-style: none;\r\ntext-align: center;\r\nfont-size: 18px;\r\nwidth: 100%;\r\nli+li{\r\n    margin-top: 8px;\r\n}\r\n`;\r\n\r\nexport const ListLink = styled(Link)`\r\n    color: #2F4F4F;\r\n    text-decoration: none;\r\n`;\r\n\r\nexport const Li = styled.li`\r\nmax-width: 400px;\r\nfont-weight: 600;\r\nmargin: 0 auto;\r\nbackground-color: rgba(255, 255, 255, 0.6);;\r\nborder-radius: 10px;\r\n@media screen and (max-width: 680px){\r\n    margin: 0 auto;\r\n}\r\n`\r\n\r\nexport const ArrowsDiv = styled.div`\r\n    max-width: 350px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n`; ","import styled, {keyframes} from 'styled-components';\r\nconst load = keyframes`\r\n    0% {\r\n    box-shadow: 0 -0.83em 0 -0.4em, 0 -0.83em 0 -0.42em, 0 -0.83em 0 -0.44em, 0 -0.83em 0 -0.46em, 0 -0.83em 0 -0.477em;\r\n  }\r\n  5%,\r\n    95% {\r\n    box-shadow: 0 -0.83em 0 -0.4em, 0 -0.83em 0 -0.42em, 0 -0.83em 0 -0.44em, 0 -0.83em 0 -0.46em, 0 -0.83em 0 -0.477em;\r\n  }\r\n  10%,\r\n    59% {\r\n    box-shadow: 0 -0.83em 0 -0.4em, -0.087em -0.825em 0 -0.42em, -0.173em -0.812em 0 -0.44em, -0.256em -0.789em 0 -0.46em, -0.297em -0.775em 0 -0.477em;\r\n  }\r\n    20% {\r\n    box-shadow: 0 -0.83em 0 -0.4em, -0.338em -0.758em 0 -0.42em, -0.555em -0.617em 0 -0.44em, -0.671em -0.488em 0 -0.46em, -0.749em -0.34em 0 -0.477em;\r\n  }\r\n    38% {\r\n    box-shadow: 0 -0.83em 0 -0.4em, -0.377em -0.74em 0 -0.42em, -0.645em -0.522em 0 -0.44em, -0.775em -0.297em 0 -0.46em, -0.82em -0.09em 0 -0.477em;\r\n  }\r\n    100% {\r\n    box-shadow: 0 -0.83em 0 -0.4em, 0 -0.83em 0 -0.42em, 0 -0.83em 0 -0.44em, 0 -0.83em 0 -0.46em, 0 -0.83em 0 -0.477em;\r\n  }\r\n`\r\n\r\nconst round = keyframes`\r\n    0% {\r\n    -webkit-transform: rotate(0deg);\r\n    transform: rotate(0deg);\r\n  }\r\n    100% {\r\n    -webkit-transform: rotate(360deg);\r\n    transform: rotate(360deg);\r\n  }\r\n` \r\nconst Spin = styled.div`\r\n    color: #ffffff;\r\n    font-size: 90px;\r\n    text-indent: -9999em;\r\n    overflow: hidden;\r\n    width: 1em;\r\n    height: 1em;\r\n    border-radius: 50%;\r\n    margin: 72px auto;\r\n    position: relative;\r\n    -webkit-transform: translateZ(0);\r\n    -ms-transform: translateZ(0);\r\n    transform: translateZ(0);\r\n    -webkit-animation: ${load} 1.7s infinite ease, ${round} 1.7s infinite ease;\r\n    animation: ${load} 1.7s infinite ease, ${round} 1.7s infinite ease;\r\n`;\r\n\r\n\r\n\r\nconst Spinner = () => {\r\n    return <Spin>Loading...</Spin>\r\n}\r\n\r\n\r\nexport default Spinner;","import Spinner from './spinner';\r\n\r\nexport default Spinner;\r\n","import ItemList from './itemList';\r\nexport default ItemList;","import React, { useEffect, useState } from 'react';\r\nimport {Ul, Li, ListLink} from './itemListElements';\r\nimport Spinner from '../spinner';\r\n\r\nconst ItemList = ({getData, getPath}) => {\r\n    const [ itemsList, setItemsList ] = useState([]);\r\n    const [loading, setLoadind] = useState(true);\r\n    \r\n    const renderItems = (arr) => {\r\n        \r\n        return arr.map(item => {\r\n            return (\r\n                <Li key={item.id}><ListLink to={`${getPath}${item.id}`}>{item.name}</ListLink></Li>\r\n            )\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        (async () => {\r\n            const id = window.location.href.split('=')[1];\r\n            const {results} = await getData(id);\r\n            setItemsList(results);\r\n            setLoadind(false);\r\n        })()   \r\n    }, [getData])\r\n\r\n    const items = renderItems(itemsList);\r\n\r\n    if (!itemsList) return null\r\n\r\n    return (\r\n        loading ? <Spinner/> : (\r\n            <>\r\n                <Ul>\r\n                    {items}\r\n                </Ul>\r\n            </>\r\n        )\r\n    );\r\n\r\n}\r\n\r\nexport default ItemList;","export default class GotService{\r\n    constructor(){\r\n        this._apiBase = 'https://rickandmortyapi.com/api';\r\n    }\r\n    getResource = async (url = '') => {\r\n        const res = await fetch(`${this._apiBase}${url}`);\r\n    \r\n        if (!res.ok) {\r\n          throw new Error(`Could not fetch ${url}` +\r\n            `, received ${res.status}`);\r\n        }\r\n        return await res.json();\r\n    }\r\n    getAllCharacters = async (id = 1) => {\r\n        \r\n            const res = await this.getResource(`/character/?page=${id}`);\r\n            return {\r\n                results: res.results, \r\n                res      \r\n            }\r\n    }\r\n\r\n    getAllEpisodes = async () => {\r\n        const res =  await this.getResource('/episode/');\r\n        return {\r\n            results: res.results, \r\n            res\r\n        }\r\n    }\r\n    getAllLocations = async () => {\r\n        const res = await this.getResource('/location/');\r\n        return {\r\n            results: res.results, \r\n            res\r\n        }\r\n    }\r\n    getCharacter = async (id) => {\r\n        const character = await this.getResource(`/character/${id}/`);\r\n        return this._transformCharacter(character);\r\n    }\r\n\r\n    getEpisode = async (id) => {\r\n        const episode = await this.getResource(`/episode/${id}`);\r\n        return this._transformEpisode(episode);\r\n    }\r\n\r\n    getLocation = async (id) => {\r\n        const location = await this.getResource(`/location/${id}`);\r\n        return this._transformLocatoin(location);\r\n    }\r\n\r\n    _transformDate = (date) => date.split('T')[0]\r\n    \r\n\r\n    isSet = data => data ? data : 'no data :(';\r\n    isLink = link => {\r\n        const id = link.split('/')[link.length-1];\r\n        const position = link.split('/')[link.length-2];\r\n        return `/${position}/${id}/`\r\n    }\r\n    _extractId = (item) => {\r\n        const idRegExp = /\\/([0-9]*)$/;\r\n        return item.url.match(idRegExp)[1];\r\n    }\r\n\r\n    _transformCharacter = (char) => {\r\n        return {\r\n            id: this._extractId(char),\r\n            name: this.isSet(char.name),\r\n            status: this.isSet(char.status),\r\n            gender: this.isSet(char.gender),\r\n            origin: this.isSet(char.origin.name),\r\n            originLink: char.origin.url,\r\n            img: this.isSet(char.image)\r\n        };\r\n    }\r\n\r\n    _transformEpisode = (episode) => {\r\n        return {\r\n            id: this._extractId(episode),\r\n            name: this.isSet(episode.name),\r\n            episode: this.isSet(episode.episode),\r\n            created: this._transformDate(episode.created)\r\n        };\r\n    }\r\n\r\n    _transformLocatoin = (location) => {\r\n        return {\r\n            id: this._extractId(location),\r\n            name: this.isSet(location.name),\r\n            dimension: this.isSet(location.dimension),\r\n            created: this._transformDate(location.created),\r\n        };\r\n    }\r\n    \r\n}","export default __webpack_public_path__ + \"static/media/background.ad1bccd1.png\";","import styled from 'styled-components';\r\nimport image from './background.png';\r\n\r\nexport const AppBlock = styled.div`\r\n    width: 100%;\r\n    background-image: url(${image});\r\n    background-position: center;\r\n    background-size: cover;\r\n    min-height: 100vh;\r\n`\r\nexport const Container = styled.div`\r\n    max-width: 800px;\r\n    margin: 0 auto;\r\n`","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    *{\r\n        box-sizing: border-box;\r\n        margin: 0;\r\n        padding: 0;\r\n        font-family: 'Nerko One', sans-serif;\r\n    }\r\n`;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = (props) => {\r\n    return (\r\n        <ContainerDiv>\r\n            {props.children}\r\n        </ContainerDiv>\r\n    )\r\n}\r\n\r\nconst ContainerDiv = styled.div`\r\n    display: flex;\r\n    align-items: top;\r\n    justify-content: space-between;\r\n`;\r\n\r\nexport default Container;\r\n","import Container from './container';\r\n\r\nexport default Container;","import styled from 'styled-components';\r\nimport {Link} from 'react-router-dom';\r\nimport {BsFillShiftFill} from \"react-icons/bs\";\r\n\r\n\r\nexport const DetailsDiv = styled.div`\r\n    margin: 0 auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: rgba(255, 255, 255, 0.8);\r\n    padding: .5rem .5rem;\r\n    border-radius: 5px;\r\n    position: relative;\r\n    box-shadow: 2px 2px rgba(0, 0, 0, 0.3);\r\n`; \r\n\r\nexport const CharImageContainer = styled.div`\r\n    border-radius: 5px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`; \r\nexport const CharImage = styled.img`\r\n    width: 200px;\r\n    height: 200px;\r\n    border-radius: 5px;\r\n`; \r\nexport const CharInfo = styled.div`\r\n    display: flex;\r\n    margin-left: .7rem;\r\n    margin-right: .7rem;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n`;\r\n\r\nexport const DetailsLink = styled(Link)`\r\n    color: darkgreen;\r\n    text-decoration: none;\r\n`;\r\n\r\nexport const ArrowLink = styled(Link)`\r\n    color: darkgreen;\r\n    width: 50px;\r\n    height: 50px;\r\n    position: absolute;\r\n    left: -2.6rem;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    border-radius: 50%;\r\n    background-color: rgba(255, 255, 255, 0.8);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    box-shadow: 1px 1px rgba(0, 0, 0, 0.3);\r\n    transition: all .2s ease-in;\r\n    &:hover{\r\n        color: #FFFF00;\r\n    }\r\n`;\r\nexport const Arrow = styled(BsFillShiftFill)`\r\n    transform: rotate(270deg) scale(1.3);\r\n`;\r\n\r\nexport const StatusDiv = styled.div`\r\n    padding-left: 1rem;\r\n    position: relative;\r\n    &::before{\r\n        content: '';\r\n        position: absolute;\r\n        width: .6rem;\r\n        height: .6rem;\r\n        border-radius: 50%;\r\n        left: 0;\r\n        top: 50%;\r\n        transform: translateY(-50%);\r\n        background-color: ${({statusDote}) => (statusDote ? 'green' : 'red')};;\r\n    }\r\n`;\r\n\r\nexport const Title = styled.h3`\r\n    font-size: 1.5rem;\r\n`;","import React, {useState, useEffect} from 'react';\r\nimport Spinner from '../spinner';\r\nimport { DetailsDiv, CharInfo, CharImageContainer, CharImage, ArrowLink, Arrow, StatusDiv, Title, DetailsLink } from './itemDetailsElements';\r\n\r\nconst CharacterDetails = ({getData}) => {\r\n\r\n    const href = `${window.location.href}`;\r\n    const hrefArr = href.split('/');\r\n    const l = hrefArr.length;\r\n    const id = hrefArr[l-1];\r\n\r\n    const [character, setCharacter] = useState('');\r\n    const [loading, setLoadind] = useState(true);\r\n    const [ link, setLink ] = useState('');\r\n    const {gender, name, origin, status, img, originLink} = character;\r\n\r\n    const isLink =  link => {\r\n        const arr =  link.split('/');\r\n        const length = arr.length-1;\r\n        const id = arr[length]\r\n        const position =  arr[length-1];\r\n        if (position === undefined) return false\r\n        return `/rick-and-morty/${position}/${id}`\r\n    }\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            getData(id).then(item => {\r\n                setCharacter(item)\r\n                setLoadind(false)\r\n                if(originLink !== undefined){\r\n                    setLink(isLink(originLink))\r\n                }\r\n            })\r\n        })()   \r\n    }, [getData, id, originLink])\r\n\r\n   \r\n    const statusDote = status === 'Alive' ? true : false;\r\n\r\n    return (\r\n\r\n        loading ? <Spinner/> : \r\n        (\r\n            <DetailsDiv>\r\n                <ArrowLink to='/rick-and-morty/characters/'>\r\n                     <Arrow/>\r\n                </ArrowLink>\r\n                <CharImageContainer>\r\n                    <CharImage src={img} />\r\n                </CharImageContainer>\r\n                <CharInfo>\r\n                    <Title>{name}</Title>\r\n                    <StatusDiv statusDote={statusDote}>{status} - {gender}</StatusDiv>\r\n                    <div>from: <DetailsLink to={link}>{origin}</DetailsLink></div>\r\n                </CharInfo>\r\n            </DetailsDiv>\r\n        )\r\n    \r\n    )\r\n\r\n}\r\n\r\nexport default CharacterDetails\r\n","import React, {useState, useEffect } from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport { DetailsDiv, ArrowLink, Arrow } from './itemDetailsElements';\r\nimport Spinner from '../spinner';\r\n\r\n\r\nconst LocationDetails = ({getData}) => {\r\n\r\n    const href = `${window.location.href}`;\r\n    const hrefArr = href.split('/');\r\n    const l = hrefArr.length;\r\n    const id = hrefArr[l-1];\r\n    const history = useHistory();\r\n\r\n\r\n    const [location, setLocation] = useState('');\r\n    const [loading, setLoadind] = useState(true);\r\n    \r\n\r\n    const his = (history) => history.goBack();\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            getData(id).then(item => {\r\n                setLocation(item)\r\n                setLoadind(false);\r\n            })\r\n        })()   \r\n    }, [getData, id, history])\r\n\r\n    const {dimension, name, created} = location;\r\n            \r\n    return (\r\n        loading ? <Spinner/> : \r\n        (\r\n            <DetailsDiv>\r\n                <ArrowLink onClick={() => his(history)} to={`/rick-and-morty/`} >\r\n                     <Arrow/>\r\n            </ArrowLink>\r\n                <div>Title: {name}</div>\r\n                <div>Dimension: {dimension}</div>\r\n                <div>Created: {created}</div>\r\n            </DetailsDiv>\r\n        )\r\n    )\r\n}\r\n\r\nexport default LocationDetails\r\n","import React, {useState, useEffect} from 'react'\r\nimport Spinner from '../spinner';\r\nimport { DetailsDiv, ArrowLink, Arrow } from './itemDetailsElements';\r\n\r\nconst EpisodeDetails = ({getData}) => {\r\n\r\n    const href = `${window.location.href}`;\r\n    const hrefArr = href.split('/');\r\n    const l = hrefArr.length;\r\n    const id = hrefArr[l-1];\r\n\r\n    const [character, setCharacter] = useState('');\r\n    const [loading, setLoadind] = useState(true);\r\n\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            getData(id).then(item => {\r\n              setCharacter(item)\r\n              setLoadind(false);\r\n            })\r\n        })()   \r\n    }, [getData, id])\r\n\r\n\r\n    const {name, episode, created} = character;\r\n\r\n  return (\r\n    loading ? <Spinner/> : \r\n    (\r\n      <DetailsDiv>\r\n          <ArrowLink to='/rick-and-morty/episode/' >\r\n                     <Arrow/>\r\n          </ArrowLink>\r\n          <div>Episode No: {episode}</div>\r\n          <div>Title: {name}</div>\r\n          <div>Created: {created}</div>\r\n      </DetailsDiv>\r\n    )\r\n  )\r\n}\r\n\r\nexport default EpisodeDetails\r\n","import App from './app';\r\nexport default App;","import React from 'react';\r\nimport Header from '../header';\r\nimport ItemList from '../itemList';\r\nimport GotService from '../../services/gotService';\r\nimport { AppBlock, Container as AppContainer } from './appElements';\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\nimport { GlobalStyle } from '../../globalStyle';\r\nimport Container from '../container';\r\nimport {CharacterDetails, LocationDetails, EpisodeDetails} from '../itemsDetails';\r\n\r\n\r\nconst App = () => {\r\n\r\n    const gotService = new GotService();\r\n\r\n    return (\r\n        <Router>\r\n            <GlobalStyle/>\r\n            <AppBlock>\r\n                <AppContainer>\r\n                    <Header/>\r\n                        <Route exact path='/rick-and-morty/characters/' \r\n                            render={() => \r\n                                <Container >\r\n                                    <ItemList getPath={'/rick-and-morty/characters/'} getData={gotService.getAllCharacters} /> \r\n                                </Container> }/>\r\n                        <Route exact path='/rick-and-morty/characters/:id' \r\n                            render={() => \r\n                                <Container>\r\n                                    <CharacterDetails getData={gotService.getCharacter} />\r\n                                </Container>\r\n                                }/>\r\n                        <Route exact path='/rick-and-morty/location/' \r\n                            render={() => \r\n                                <Container>\r\n                                    <ItemList getPath={'/rick-and-morty/location/'} getData={gotService.getAllLocations} />\r\n                                </Container>\r\n                            }/>\r\n                        <Route exact path='/rick-and-morty/location/:id' \r\n                            render={() => \r\n                                <Container>\r\n                                    <LocationDetails  getData={gotService.getLocation} />\r\n                                </Container>  \r\n                            }/>\r\n                        <Route exact path='/rick-and-morty/episode/' \r\n                            render={() =>   \r\n                                <Container>\r\n                                    <ItemList getPath={'/rick-and-morty/episode/'} getData={gotService.getAllEpisodes} />  \r\n                                </Container> \r\n                            }/>\r\n\r\n                        <Route exact path='/rick-and-morty/episode/:id' \r\n                            render={() =>   \r\n                                <Container>\r\n                                    <EpisodeDetails getData={gotService.getEpisode}/> \r\n                                </Container> \r\n                            }/>\r\n                </AppContainer>\r\n            </AppBlock>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}